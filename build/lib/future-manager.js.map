{"version":3,"sources":["../../src/future-manager.js"],"names":["futureManager","store","next","action","type","FLAT_REDUX_ACTION_TYPE","Updater","state","getState"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;AAEA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK;AAAA,SAAI,UAAAC,IAAI;AAAA,WAAI,UAAAC,MAAM,EAAI;AAC/C,UAAIA,MAAM,CAACC,IAAP,KAAgBC,iCAAhB,IAA0C,uBAAWF,MAAM,CAACG,OAAlB,CAA9C,EAA0E;AACxE,YAAMC,KAAK,GAAGN,KAAK,CAACO,QAAN,EAAd;AACA,eAAON,IAAI,mBAAMC,MAAN;AAAcG,UAAAA,OAAO,EAAEH,MAAM,CAACG,OAAP,CAAeC,KAAf,EAAsBN,KAAtB;AAAvB,WAAX;AACD;;AACD,aAAOC,IAAI,CAACC,MAAD,CAAX;AACD,KANkC;AAAA,GAAR;AAAA,CAA3B;;eAQeH,a","sourcesContent":["import { isFunction } from './utils'\nimport { FLAT_REDUX_ACTION_TYPE } from './constants'\n\nconst futureManager = store => next => action => {\n  if (action.type === FLAT_REDUX_ACTION_TYPE && isFunction(action.Updater)) {\n    const state = store.getState()\n    return next({ ...action, Updater: action.Updater(state, store) })\n  }\n  return next(action)\n}\n\nexport default futureManager\n"],"file":"future-manager.js"}