{"version":3,"sources":["../../src/index.js"],"names":["setState","type","FLAT_REDUX_ACTION_TYPE","Updater","set","createStore","initState","middlewares","reducer","state","store","applyMiddleware","futureManager","dispatch"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;;;;;;;;;;;AAEO,IAAMA,QAAQ,GAAG,SAAXA,QAAW;AAAA,SAAc;AACpCC,IAAAA,IAAI,EAAEC,iCAD8B;AAEpCC,IAAAA,OAAO,EAAEC;AAF2B,GAAd;AAAA,CAAjB;;;;AAKA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAsC;AAAA,MAArCC,SAAqC,uEAAzB,EAAyB;AAAA,MAArBC,WAAqB,uEAAP,EAAO;;AAC/D,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,QAACC,KAAD,uEAAS,EAAT;;AAAA;AAAA,QAAeR,IAAf,QAAeA,IAAf;AAAA,QAAqBE,OAArB,QAAqBA,OAArB;;AAAA,WACdF,IAAI,KAAKC,iCAAT,GAAkC,sBAAUC,OAAV,EAAmBM,KAAnB,CAAlC,GAA8DA,KADhD;AAAA,GAAhB;;AAGA,MAAMC,KAAK,GAAG,wBACZF,OADY,EAEZF,SAFY,EAGZK,sCAAgBC,sBAAhB,4BAAkCL,WAAlC,GAHY,CAAd;;AAMAG,EAAAA,KAAK,CAACN,GAAN,GAAY,YAAa;AACvBM,IAAAA,KAAK,CAACG,QAAN,CAAeb,QAAQ,MAAR,mBAAf;AACD,GAFD;;AAGA,SAAOU,KAAP;AACD,CAdM","sourcesContent":["import { createStore as reduxCreateStore, applyMiddleware } from 'redux'\n\nimport futureManager from './future-manager'\nimport { runIfFunc, set, get } from './utils'\nimport { FLAT_REDUX_ACTION_TYPE } from './constants'\n\nexport const setState = (...args) => ({\n  type: FLAT_REDUX_ACTION_TYPE,\n  Updater: set(...args)\n})\n\nexport const createStore = (initState = {}, middlewares = []) => {\n  const reducer = (state = {}, { type, Updater }) =>\n    type === FLAT_REDUX_ACTION_TYPE ? runIfFunc(Updater, state) : state\n\n  const store = reduxCreateStore(\n    reducer,\n    initState,\n    applyMiddleware(futureManager, ...middlewares)\n  )\n\n  store.set = (...args) => {\n    store.dispatch(setState(...args))\n  }\n  return store\n}\n\nexport { setState as set, get }\n"],"file":"index.js"}